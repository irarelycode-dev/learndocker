docker pull
docker run <image>
docker run -p host_port:container_port <image>
docker run -d -p host_port:container_port <image>
docker run --detach -p host_port:container_port <image>
docker stop <container_id/container_name>
docker run -d -p host_port:container_port --name <container_name> <image>
docker ps or docker container ls
docker ps -a or docker container ls -a
docker logs <container_name>
docker top <container_name> //displays the running process of the container

what happens when in "docker run"
1. Looks for image locally in the cache
2. If not, looks in the remote image repository (defaults to Docker Hub)
3. download the latest version (nginx:latest by default)
4. Creates a new container based on that image and prepares to start
5. Gives it a virtual IP on a private network inside a docker engine
6. opens up a port and runs

docker image rm <image_name>
docker exec -it <image_name> sh
docker start <container_id>
docker kill <container_id>
docker stop <container_id>
docker system prune //removes all containers, all networks not used by atleast one container, all dangling images and build cache
docker images
docker container rm <container_name>